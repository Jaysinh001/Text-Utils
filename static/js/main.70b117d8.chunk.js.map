{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","Alert","props","alert","className","concat","type","role","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","item1","item2","onClick","togglemode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","align","style","color","heading","textareaHeading","value","backgroundColor","onChange","event","target","rows","toUpperCase","Alert_func","toLowerCase","split","length","defaultProps","App","setMode","_useState3","_useState4","newAlert","message","setTimeout","document","body","background","components_Alert","react_router_dom","react_router","path","element","index","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.70b117d8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction Alert(props) {\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type} : {props.alert.msg}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n// Alert.prototype = { alert: PropTypes.string.isRequired }\r\n\r\n// Alert.defaultProps = { alert: \"alert\" }\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                {props.item1}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"/\">\r\n                {props.item2}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\" />\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n        <div className ={`form-check form-switch text-${props.mode === 'dark'?'light':'dark'}`}>\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'dark'?'Enable Light-Mode' : 'Enable Dark-mode'}</label>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  item1: PropTypes.string,\r\n  item2: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"title\",\r\n  item1: \"item1\",\r\n  item2: \"item2\"\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Textform(props) {\r\n  const UpperCase = () => {\r\n    setText(text.toUpperCase());\r\n    props.Alert_func(\"Successfully converted to UpperCase\",\"success\");\r\n  };\r\n  \r\n  const LowerCase = () => {\r\n    setText(text.toLowerCase());\r\n    props.Alert_func(\"Successfully converted to LowerCase\",\"success\");\r\n  };\r\n  \r\n  const ClearText = () => {\r\n    let gettext = text;\r\n    setText(gettext = \"\");\r\n    props.Alert_func(\"All Text is Cleared\",\"success\");\r\n  };\r\n\r\n  const OnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n\r\n  const [text, setText] = useState(\"Enter your text here...\");\r\n\r\n  return (\r\n    <>\r\n      <div className={`container mt-5 text-${props.mode === 'dark'?'light':'dark'}`}>\r\n        <h1 align=\"center\" style={{color: props.mode==='dark'?'white':'black'}} >{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"textarea\" className=\"form-label font-size: 17px my-3\">\r\n            {props.textareaHeading}\r\n          </label>\r\n\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{backgroundColor: props.mode==='dark'? 'Grey': 'white', color:props.mode=== 'dark'?'white': 'black'}}\r\n            onChange={OnChange}\r\n            id=\"textarea\"\r\n            rows=\"7\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={UpperCase}>\r\n          UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={LowerCase}>\r\n          LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={ClearText}>\r\n          Clear Text\r\n        </button>\r\n        {/* <button className=\"btn btn-primary m-4\" onClick={}>UpperCase</button>\r\n        <button className=\"btn btn-primary m-4\" onClick={}>UpperCase</button> */}\r\n      </div>\r\n\r\n      <div className={`container text-${props.mode === 'dark'?'light':'dark'} `}>\r\n        <h1>Your Summary is : </h1>\r\n        <p>\r\n          {/* split(\" \") will return array containing words */}\r\n          Number of Words are : {text.split(' ').length}\r\n          <br />\r\n          {/* Returns total length of text */}\r\n          Number of Characters are : {text.length}\r\n        </p>\r\n        <hr />\r\n      </div>\r\n\r\n      <div className={`container text-${props.mode === 'dark'?'light':'dark'} `}>\r\n        <h3>Preview :</h3>\r\n        <br />\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextform.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n  textareaHeading: PropTypes.string.isRequired,\r\n};\r\n\r\nTextform.defaultProps = {\r\n  heading: \"heading\",\r\n  textareaHeading: \"textareaHeading\",\r\n};\r\n\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\n\n// import ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // default mode\n  const [alert, newAlert] = useState(null)\n\n  const Alert_func = (message, type) => {\n\n    newAlert({\n      msg: message,\n      type: type\n    });\n\n\n    setTimeout(() => {\n      newAlert(null);\n    }, 1500);\n\n  }\n\n  const togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      Alert_func(\"Light Mode is been Enabbled...\", \"success\")\n    } else {\n      setMode(\"dark\");\n      document.body.style.background = \"#0b032a\";\n      Alert_func(\"Dark Mode is been Enabbled...\", \"success\")\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        title=\"TEXT UTILS\"\n        item1=\"HOME\"\n        item2=\"ABOUT US\"\n        mode={mode}\n        togglemode={togglemode}\n      />\n\n      <Alert alert={alert} />\n\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Textform\n            heading=\"Welcome To TEXT UTILS\"\n            textareaHeading=\"Enter the text to analyze\"\n            mode={mode}\n            Alert_func={Alert_func}\n          />}>\n            <Route index element={<About />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n\n\n\n      {/* <Textform\n        heading=\"Welcome To TEXT UTILS\"\n        textareaHeading=\"Enter the text to analyze\"\n        mode={mode}\n        Alert_func={Alert_func}\n      />\n      <About /> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}